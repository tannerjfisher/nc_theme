/******/ (function() { // webpackBootstrap
/******/ 	"use strict";
/******/ 	// The require scope
/******/ 	var __webpack_require__ = {};
/******/ 	
/************************************************************************/
/******/ 	/* webpack/runtime/define property getters */
/******/ 	!function() {
/******/ 		// define getter functions for harmony exports
/******/ 		__webpack_require__.d = function(exports, definition) {
/******/ 			for(var key in definition) {
/******/ 				if(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {
/******/ 					Object.defineProperty(exports, key, { enumerable: true, get: definition[key] });
/******/ 				}
/******/ 			}
/******/ 		};
/******/ 	}();
/******/ 	
/******/ 	/* webpack/runtime/hasOwnProperty shorthand */
/******/ 	!function() {
/******/ 		__webpack_require__.o = function(obj, prop) { return Object.prototype.hasOwnProperty.call(obj, prop); }
/******/ 	}();
/******/ 	
/******/ 	/* webpack/runtime/make namespace object */
/******/ 	!function() {
/******/ 		// define __esModule on exports
/******/ 		__webpack_require__.r = function(exports) {
/******/ 			if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 				Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 			}
/******/ 			Object.defineProperty(exports, '__esModule', { value: true });
/******/ 		};
/******/ 	}();
/******/ 	
/************************************************************************/
var __webpack_exports__ = {};
/*!**********************************!*\
  !*** ./src/js/dropdown-utils.js ***!
  \**********************************/
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   handleDropdownOverflow: function() { return /* binding */ handleDropdownOverflow; }
/* harmony export */ });
/**
 * @file
 * Dropdown utility functions.
 */

function handleDropdownOverflow(element) {
  const activeDropdownRect = element.querySelector('.dropdown-menu').getBoundingClientRect();
  const allDropdowns = element.querySelectorAll('.dropdown-menu');
  let isOverflowing;
  allDropdowns.forEach(dropdown => {
    const dropdownItem = dropdown.parentElement;
    if (dropdownItem.classList.contains('opens-right')) {
      isOverflowing = activeDropdownRect.left + activeDropdownRect.width + activeDropdownRect.width > window.innerWidth; // Third Level

      if (isOverflowing) {
        dropdownItem.classList.remove('opens-right');
        dropdownItem.classList.add('opens-left');
      }
    } else if (dropdownItem.classList.contains('aligns-left')) {
      isOverflowing = activeDropdownRect.left + activeDropdownRect.width > window.innerWidth; // Second Level

      if (isOverflowing) {
        dropdownItem.classList.remove('aligns-left');
        dropdownItem.classList.add('aligns-right');
      }
    }
  });
}
/******/ })()
;
//# sourceMappingURL=dropdown-utils.min.js.map