{"version":3,"file":"dist/js/nc-simple-sidebar-menu.min.js","mappings":";;;;AAAA;AACA;AACA;AACA;;AAEA,CAAC,UAAUA,MAAM,EAAE;EACjB,YAAY;;EAEZA,MAAM,CAACC,SAAS,CAACC,iBAAiB,GAAG;IACnCC,MAAM,EAAE,SAAAA,CAAUC,OAAO,EAAE;MACzB;MACA,MAAMC,eAAe,GAAGD,OAAO,CAACE,gBAAgB,CAAC,mDAAmD,CAAC;MAErGD,eAAe,CAACE,OAAO,CAAEC,OAAO,IAAK;QACnC,MAAMC,YAAY,GAAGC,QAAQ,CAACC,aAAa,CAAC,QAAQ,CAAC;QACrDF,YAAY,CAACG,SAAS,CAACC,GAAG,CAAC,kBAAkB,CAAC;QAE9CJ,YAAY,CAACK,YAAY,CAAC,eAAe,EAAE,OAAO,CAAC;QACnDL,YAAY,CAACM,SAAS,8aAMrB;QACDP,OAAO,CAACQ,MAAM,CAACP,YAAY,CAAC;MAC9B,CAAC,CAAC;MAEF,MAAMQ,cAAc,GAAGb,OAAO,CAACE,gBAAgB,CAAC,mBAAmB,CAAC;;MAEpE;MACAW,cAAc,CAACV,OAAO,CAAEW,MAAM,IAAK;QACjC,MAAMC,UAAU,GAAGD,MAAM,CAACE,sBAAsB;QAChD,IAAID,UAAU,IAAIA,UAAU,CAACE,OAAO,KAAK,GAAG,EAAE;UAC5C,MAAMC,eAAe,GAAGH,UAAU,CAACI,WAAW,CAACC,IAAI,CAAC,CAAC;UACrD,MAAMC,UAAU,GAAGP,MAAM,CAACQ,aAAa,CAAC,OAAO,CAAC;UAChDD,UAAU,CAACF,WAAW,WAAAI,MAAA,CAAWL,eAAe,cAAW;;UAE3D;UACA,IAAIJ,MAAM,CAACU,UAAU,CAAChB,SAAS,CAACiB,QAAQ,CAAC,yBAAyB,CAAC,EAAE;YACnEC,aAAa,CAACZ,MAAM,CAAC;UACvB;QACF;MACF,CAAC,CAAC;;MAEF;AACN;AACA;AACA;AACA;AACA;MACM,SAASY,aAAaA,CAACZ,MAAM,EAAE;QAC7B,MAAMC,UAAU,GAAGD,MAAM,CAACE,sBAAsB;QAChD,MAAMZ,OAAO,GAAGU,MAAM,CAACa,kBAAkB;QACzC,MAAMT,eAAe,GAAGH,UAAU,GAAGA,UAAU,CAACI,WAAW,CAACC,IAAI,CAAC,CAAC,GAAG,EAAE;;QAEvE;QACA,IAAIL,UAAU,EAAEA,UAAU,CAACP,SAAS,CAACM,MAAM,CAAC,MAAM,CAAC;QACnD,IAAIV,OAAO,EAAEA,OAAO,CAACI,SAAS,CAACM,MAAM,CAAC,MAAM,CAAC;QAC7CA,MAAM,CAACN,SAAS,CAACM,MAAM,CAAC,MAAM,CAAC;;QAE/B;QACA,MAAMc,UAAU,GAAGd,MAAM,CAACe,YAAY,CAAC,eAAe,CAAC,KAAK,MAAM;QAClEf,MAAM,CAACJ,YAAY,CAAC,eAAe,EAAE,CAACkB,UAAU,CAAC;QACjD,MAAMP,UAAU,GAAGP,MAAM,CAACQ,aAAa,CAAC,OAAO,CAAC;QAChDD,UAAU,CAACF,WAAW,GAAGS,UAAU,WAAAL,MAAA,CACAL,eAAe,yBAAAK,MAAA,CACfL,eAAe,cAAW;MAC/D;;MAEA;MACAL,cAAc,CAACV,OAAO,CAAEW,MAAM,IAAK;QACjCA,MAAM,CAACgB,gBAAgB,CAAC,OAAO,EAAE,MAAM;UACrCJ,aAAa,CAACZ,MAAM,CAAC;QACvB,CAAC,CAAC;MACJ,CAAC,CAAC;IACJ;EACF,CAAC;AACH,CAAC,EAAElB,MAAM,CAAC,C","sources":["webpack://nc_theme/./src/js/nc-simple-sidebar-menu.js"],"sourcesContent":["/**\n * @file\n * Simple Sidebar Menu\n */\n\n(function (Drupal) {\n  'use strict';\n\n  Drupal.behaviors.simpleSidebarMenu = {\n    attach: function (context) {\n      // ===== Add menu control to the custom close button in the mobile navigation panel\n      const subMenuToExpand = context.querySelectorAll('.nc-simple-sidebar-menu .menu-item--expanded > ul');\n\n      subMenuToExpand.forEach((subMenu) => {\n        const toggleButton = document.createElement('button');\n        toggleButton.classList.add('sub-menu--toggle');\n\n        toggleButton.setAttribute('aria-expanded', 'false');\n        toggleButton.innerHTML = `\n          <span class=\"text visually-hidden\">Show Sub Menu</span>\n          <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" fill=\"currentColor\" class=\"bi bi-chevron-down icon\" viewBox=\"0 0 16 16\">\n            <path fill-rule=\"evenodd\" d=\"M1.646 4.646a.5.5 0 0 1 .708 0L8 10.293l5.646-5.647a.5.5 0 0 1 .708.708l-6 6a.5.5 0 0 1-.708 0l-6-6a.5.5 0 0 1 0-.708\"/>\n          </svg>\n\n        `;\n        subMenu.before(toggleButton);\n      });\n\n      const subMenuToggles = context.querySelectorAll('.sub-menu--toggle');\n\n      // ===== Set sub menu toggles\n      subMenuToggles.forEach((toggle) => {\n        const parentLink = toggle.previousElementSibling;\n        if (parentLink && parentLink.tagName === 'A') {\n          const subMenuItemText = parentLink.textContent.trim();\n          const toggleText = toggle.querySelector('.text');\n          toggleText.textContent = `Show ${subMenuItemText} sub menu`;\n\n          // Automatically open if the parent has the active trail class\n          if (toggle.parentNode.classList.contains('menu-item--active-trail')) {\n            toggleSubMenu(toggle);\n          }\n        }\n      });\n\n      /**\n       * Toggles the sub menu visibility.\n       *\n       * @param {HTMLElement} toggle\n       *   The toggle button element.\n       */\n      function toggleSubMenu(toggle) {\n        const parentLink = toggle.previousElementSibling;\n        const subMenu = toggle.nextElementSibling;\n        const subMenuItemText = parentLink ? parentLink.textContent.trim() : '';\n\n        // Toggle classes\n        if (parentLink) parentLink.classList.toggle('show');\n        if (subMenu) subMenu.classList.toggle('show');\n        toggle.classList.toggle('show');\n\n        // Update ARIA attributes and toggle text\n        const isExpanded = toggle.getAttribute('aria-expanded') === 'true';\n        toggle.setAttribute('aria-expanded', !isExpanded);\n        const toggleText = toggle.querySelector('.text');\n        toggleText.textContent = isExpanded\n                                 ? `Show ${subMenuItemText} sub menu`\n                                 : `Hide ${subMenuItemText} sub menu`;\n      }\n\n      // ===== Attach click event listeners\n      subMenuToggles.forEach((toggle) => {\n        toggle.addEventListener('click', () => {\n          toggleSubMenu(toggle);\n        });\n      });\n    },\n  };\n})(Drupal);\n"],"names":["Drupal","behaviors","simpleSidebarMenu","attach","context","subMenuToExpand","querySelectorAll","forEach","subMenu","toggleButton","document","createElement","classList","add","setAttribute","innerHTML","before","subMenuToggles","toggle","parentLink","previousElementSibling","tagName","subMenuItemText","textContent","trim","toggleText","querySelector","concat","parentNode","contains","toggleSubMenu","nextElementSibling","isExpanded","getAttribute","addEventListener"],"sourceRoot":""}